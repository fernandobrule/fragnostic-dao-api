package com.fragnostic.dao.support

import java.sql.{ SQLException, Statement }

import org.slf4j.{ Logger, LoggerFactory }

import scala.collection.mutable.ArrayBuffer

/**
 * Created by Fernando Brule on 30-06-2015 22:23:00.
 * Generated by Tesseract.
 */
trait StatementAgnostic extends CloseResourceAgnostic {

  private[this] val logger: Logger = LoggerFactory.getLogger("StatementAgnostic")

  def executeBatch(statement: Statement): Either[String, Array[Long]] =
    try {
      Right({

        statement.executeBatch()
        val resultSet = statement.getGeneratedKeys
        val ids = new ArrayBuffer[Long]
        while (resultSet.next()) {
          ids += resultSet.getLong(1)
        }

        ids.toArray

      })
    } catch {
      case e: SQLException =>
        logger.error(s"$e")
        Left("statement.agnostic.error.execute.batch")
      case e: Exception =>
        logger.error(s"$e")
        Left("statement.agnostic.error.execute.batch")
      case e: Throwable =>
        logger.error(s"$e")
        Left("statement.agnostic.error.execute.batch")
    }

}
