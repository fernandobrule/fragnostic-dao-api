package com.fragnostic.dao.support

import java.sql.ResultSet

import scala.util.Try

/**
 * Created by Fernando Brule on 30-06-2015 22:23:00.
 * Generated by Tesseract.
 */
trait ResultSetGetAgnostic {

  def resultSetGetString: ResultSet => Either[String, String] = (resultSet: ResultSet) =>
    try {
      Right(resultSet.getString(1))
    } catch {
      case e: Exception => Left(e.getMessage)
    }

  def resultSetGetShort: ResultSet => Either[String, Short] = (resultSet: ResultSet) =>
    try {
      Right(resultSet.getShort(1))
    } catch {
      case e: Exception => Left(e.getMessage)
    }

  def resultSetGetInt: ResultSet => Either[String, Int] = (resultSet: ResultSet) =>
    try {
      Right(resultSet.getInt(1))
    } catch {
      case e: Exception => Left(e.getMessage)
    }

  def resultSetGetLong: ResultSet => Either[String, Long] = (resultSet: ResultSet) =>
    try {
      Right(resultSet.getLong(1))
    } catch {
      case e: Exception => Left(e.getMessage)
    }

  def resultSetGetDouble: ResultSet => Either[String, Double] = (resultSet: ResultSet) =>
    try {
      Right(resultSet.getDouble(1))
    } catch {
      case e: Exception => Left(e.getMessage)
    }

  def resultSetGetBigDecimal: ResultSet => Either[String, BigDecimal] = (resultSet: ResultSet) =>
    try {
      Right(resultSet.getBigDecimal(1))
    } catch {
      case e: Exception => Left(e.getMessage)
    }

  def resultSetMaybeGetString(resultSet: ResultSet, fieldName: String): Option[String] =
    Option(resultSet.getString(fieldName))

  def resultSetMaybeGetInt(resultSet: ResultSet, fieldName: String): Option[Int] =
    Option(resultSet.getInt(fieldName))

  def resultSetMaybeGetShort(resultSet: ResultSet, fieldName: String): Option[Short] =
    Option(resultSet.getShort(fieldName))

  def resultSetMaybeGetLong(resultSet: ResultSet, fieldName: String): Option[Long] =
    Option(resultSet.getLong(fieldName))

  def resultSetMaybeGetDouble(resultSet: ResultSet, fieldName: String): Option[Double] =
    Option(resultSet.getDouble(fieldName))

  def resultSetMaybeGetBigDecimal(resultSet: ResultSet, fieldName: String): Try[BigDecimal] =
    Try(resultSet.getBigDecimal(fieldName))

  def resultSetToShort(resultSet: ResultSet, fieldName: String) =
    resultSet.getString(fieldName).toShort

  def resultSetToInt(resultSet: ResultSet, fieldName: String) =
    resultSet.getString(fieldName).toInt

  def resultSetToLong(resultSet: ResultSet, fieldName: String) =
    resultSet.getString(fieldName).toLong

  def resultSetToDouble(resultSet: ResultSet, fieldName: String) =
    resultSet.getString(fieldName).toDouble

  def resultSetToBigDecimal(resultSet: ResultSet, fieldName: String) =
    BigDecimal(resultSet.getString(fieldName))

}
